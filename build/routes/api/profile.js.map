{"version":3,"sources":["../../../server/routes/api/profile.js"],"names":["router","get","req","res","errors","Profile","findOne","params","user_id","populate","then","profile","nonprofile","status","json","catch"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAGA,IAAMA,SAAS,sBAAf;;AAEAA,OAAOC,GAAP,CAAW,gBAAX,EAA4B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACrC,QAAMC,SAAS,EAAf;;AAEAC,sBAAQC,OAAR,CAAgB,EAAC,QAAOJ,IAAIK,MAAJ,CAAWL,GAAX,CAAeK,MAAf,CAAsBC,OAA9B,EAAhB,EACKC,QADL,CACc,OADd,EAEKC,IAFL,CAEU,mBAAW;AACb,YAAG,CAACC,OAAJ,EAAY;AACRP,mBAAOQ,UAAP,GAAoB,oCAApB;AACAT,gBAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBV,MAArB;AACH;AACDD,YAAIW,IAAJ,CAASH,OAAT;AACH,KARL,EASKI,KATL,CASW,eAAO;AACVZ,YAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACH,SAAQ,oCAAT,EAArB;AACH,KAXL;AAYH,CAfD;;kBAiBeX,M","file":"profile.js","sourcesContent":["import {Router} from 'express';\nimport Profile from \"../../Model/Profile\";\n\n\nconst router = Router();\n\nrouter.get('/user/:user_id',(req,res) => {\n    const errors = {};\n\n    Profile.findOne({'user':req.params.req.params.user_id})\n        .populate('users')\n        .then(profile => {\n            if(!profile){\n                errors.nonprofile = \"There is no profile for this user.\";\n                res.status(404).json(errors);\n            }\n            res.json(profile);\n        })\n        .catch(err => {\n            res.status(404).json({profile:'There is no profile for this user.'})\n        })\n});\n\nexport default router;"]}